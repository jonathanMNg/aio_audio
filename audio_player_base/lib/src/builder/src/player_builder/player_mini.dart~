part of 'player_builder.dart';

class PlayerMini extends StatelessWidget {
  final ApbPlayableAudio track;
  final double maxImgSize;
  final bool isOnBottomBar;
  const PlayerMini({
    super.key,
    required this.track,
    required this.maxImgSize, required this.isOnBottomBar,
  });

  @override
  Widget build(BuildContext context) {
    return Container(
      color: Theme.of(context).colorScheme.surfaceContainer,
      height: playerMinHeight,
      child: Card(
        margin: EdgeInsets.zero,
        shape: const ContinuousRectangleBorder(),
        child: Column(
          children: [
            SizedBox(
              height: isOnBottomBar ? 60 : 65,
              child: Row(
                children: [
                  ConstrainedBox(
                    constraints: BoxConstraints(maxHeight: maxImgSize),
                    child: CachedImageBuilder(
                      imageUrl: track.imageUrl!,
                      height: maxImgSize,
                    ),
                  ),
                  Expanded(
                    child: Padding(
                      padding: const EdgeInsets.only(left: 10),
                      child: Column(
                        crossAxisAlignment:
                        CrossAxisAlignment.start,
                        mainAxisAlignment: MainAxisAlignment.start,
                        children: [
                          SizedBox(
                            height: 20,
                            child: Text(track.name!),
                          ),
                          Text(track.contributors?.map((c) => c).join(', ') ?? '',
                              style: Theme.of(context)
                                  .textTheme
                                  .bodySmall!),

                        ],
                      ),
                    ),
                  ),
                  Padding(
                    padding: EdgeInsets.only(right: 3),
                    // child: MiniPlayerPlayButton(),
                    child: IconButton(onPressed: (){}, icon: Icon(Icons.play_arrow)),
                  ),
                  Padding(
                    padding: const EdgeInsets.only(right: 3),
                    child: IconButton(
                      icon: const Icon(Icons.close),
                      onPressed: () {
                        // context.read<PlayerBloc>().add(const PlayerEvent.stop());
                      },
                    ),
                  )
                ],
              ),
            ),
            SizedBox(
              height: isOnBottomBar ? 10 : 5,
              // child: const AudioPlayerProgressIndicator(
              //     isMiniPlayer: true),
              child: LinearProgressIndicator(),
            )
          ],
        ),
      ),
    );
  }
}